{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","initialText","handleKeyPressed","event","setState","key","document","addEventListener","this","removeEventListener","className","length","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAKEC,YAAc,0BALhB,EAeEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEJ,WAAW,GAAD,OAAKG,EAAME,QAhBzC,uDAOE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,oBAR5C,kCAWE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,oBAZ/C,oBAmBE,WACE,IAAQF,EAAeQ,KAAKT,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIV,EAAWW,OAAS,EAArB,mCAC6BX,EAD7B,KAGCQ,KAAKP,oBA5BjB,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.ae54cdc5.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  pressedKey : string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  initialText = 'Nothing was pressed yet';\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyPressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyPressed);\n  }\n\n  handleKeyPressed = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: `${event.key}` });\n  };\n\n  render(): ReactNode {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {(pressedKey.length > 0) ? (\n            `The last pressed key is [${pressedKey}]`\n          ) : (\n            this.initialText\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}